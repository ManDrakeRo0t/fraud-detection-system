version: '3.8'

services:
  postgres:
    restart: always
    image: 'postgres:13-alpine'
    environment:
      - 'POSTGRES_DB=fdrts'
      - 'POSTGRES_PASSWORD=12345678'
      - 'POSTGRES_USER=postgres'
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  rabbitmq:
    image: 'pcloud/rabbitmq-stomp'
    hostname: rabbitmq
    environment:
        RABBITMQ_DEFAULT_USER: admin
        RABBITMQ_DEFAULT_PASS: admin
    ports:
        - "5672:5672"
        - "15672:15672"
        - "61613:61613"
    volumes:
        - '~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/mnesia/'

  fdrts-network:
    build: ./fdrts-neural/fdrts-neural
    ports:
      - "8082:8082"

  core-app:
    build: ./fdrts-core
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fdrts
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345678
      SPRING_RABBITMQ_HOST: rabbitmq

  transaction-app:
    build: ./fdrts-transaction
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - rabbitmq
      - core-app
      - fdrts-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fdrts-tr
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345678
      SPRING_RABBITMQ_HOST: rabbitmq
      FDRTS_TRANSACTION_WEBCLIENT_NEURAL_SERVICE_HOST: fdrts-network

volumes:
  postgres-data:
  rabbitmq: