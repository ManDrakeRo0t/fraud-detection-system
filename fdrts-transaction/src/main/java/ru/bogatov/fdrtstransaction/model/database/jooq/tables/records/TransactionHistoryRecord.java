/*
 * This file is generated by jOOQ.
 */
package ru.bogatov.fdrtstransaction.model.database.jooq.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;

import ru.bogatov.fdrtstransaction.model.database.jooq.tables.TransactionHistory;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionHistoryRecord extends TableRecordImpl<TransactionHistoryRecord> implements Record10<UUID, String, String, String, String, Float, String, OffsetDateTime, Boolean, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transaction_history.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.transaction_history.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.transaction_history.cc_num</code>.
     */
    public void setCcNum(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.transaction_history.cc_num</code>.
     */
    public String getCcNum() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.transaction_history.merchant_name</code>.
     */
    public void setMerchantName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.transaction_history.merchant_name</code>.
     */
    public String getMerchantName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.transaction_history.date_time</code>.
     */
    public void setDateTime(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.transaction_history.date_time</code>.
     */
    public String getDateTime() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.transaction_history.category</code>.
     */
    public void setCategory(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.transaction_history.category</code>.
     */
    public String getCategory() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.transaction_history.amount</code>.
     */
    public void setAmount(Float value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.transaction_history.amount</code>.
     */
    public Float getAmount() {
        return (Float) get(5);
    }

    /**
     * Setter for <code>public.transaction_history.trans_num</code>.
     */
    public void setTransNum(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.transaction_history.trans_num</code>.
     */
    public String getTransNum() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.transaction_history.unix_time</code>.
     */
    public void setUnixTime(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.transaction_history.unix_time</code>.
     */
    public OffsetDateTime getUnixTime() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>public.transaction_history.is_fraud</code>.
     */
    public void setIsFraud(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.transaction_history.is_fraud</code>.
     */
    public Boolean getIsFraud() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.transaction_history.migrated</code>.
     */
    public void setMigrated(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.transaction_history.migrated</code>.
     */
    public Boolean getMigrated() {
        return (Boolean) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<UUID, String, String, String, String, Float, String, OffsetDateTime, Boolean, Boolean> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<UUID, String, String, String, String, Float, String, OffsetDateTime, Boolean, Boolean> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return TransactionHistory.TRANSACTION_HISTORY.ID;
    }

    @Override
    public Field<String> field2() {
        return TransactionHistory.TRANSACTION_HISTORY.CC_NUM;
    }

    @Override
    public Field<String> field3() {
        return TransactionHistory.TRANSACTION_HISTORY.MERCHANT_NAME;
    }

    @Override
    public Field<String> field4() {
        return TransactionHistory.TRANSACTION_HISTORY.DATE_TIME;
    }

    @Override
    public Field<String> field5() {
        return TransactionHistory.TRANSACTION_HISTORY.CATEGORY;
    }

    @Override
    public Field<Float> field6() {
        return TransactionHistory.TRANSACTION_HISTORY.AMOUNT;
    }

    @Override
    public Field<String> field7() {
        return TransactionHistory.TRANSACTION_HISTORY.TRANS_NUM;
    }

    @Override
    public Field<OffsetDateTime> field8() {
        return TransactionHistory.TRANSACTION_HISTORY.UNIX_TIME;
    }

    @Override
    public Field<Boolean> field9() {
        return TransactionHistory.TRANSACTION_HISTORY.IS_FRAUD;
    }

    @Override
    public Field<Boolean> field10() {
        return TransactionHistory.TRANSACTION_HISTORY.MIGRATED;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCcNum();
    }

    @Override
    public String component3() {
        return getMerchantName();
    }

    @Override
    public String component4() {
        return getDateTime();
    }

    @Override
    public String component5() {
        return getCategory();
    }

    @Override
    public Float component6() {
        return getAmount();
    }

    @Override
    public String component7() {
        return getTransNum();
    }

    @Override
    public OffsetDateTime component8() {
        return getUnixTime();
    }

    @Override
    public Boolean component9() {
        return getIsFraud();
    }

    @Override
    public Boolean component10() {
        return getMigrated();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCcNum();
    }

    @Override
    public String value3() {
        return getMerchantName();
    }

    @Override
    public String value4() {
        return getDateTime();
    }

    @Override
    public String value5() {
        return getCategory();
    }

    @Override
    public Float value6() {
        return getAmount();
    }

    @Override
    public String value7() {
        return getTransNum();
    }

    @Override
    public OffsetDateTime value8() {
        return getUnixTime();
    }

    @Override
    public Boolean value9() {
        return getIsFraud();
    }

    @Override
    public Boolean value10() {
        return getMigrated();
    }

    @Override
    public TransactionHistoryRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TransactionHistoryRecord value2(String value) {
        setCcNum(value);
        return this;
    }

    @Override
    public TransactionHistoryRecord value3(String value) {
        setMerchantName(value);
        return this;
    }

    @Override
    public TransactionHistoryRecord value4(String value) {
        setDateTime(value);
        return this;
    }

    @Override
    public TransactionHistoryRecord value5(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public TransactionHistoryRecord value6(Float value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransactionHistoryRecord value7(String value) {
        setTransNum(value);
        return this;
    }

    @Override
    public TransactionHistoryRecord value8(OffsetDateTime value) {
        setUnixTime(value);
        return this;
    }

    @Override
    public TransactionHistoryRecord value9(Boolean value) {
        setIsFraud(value);
        return this;
    }

    @Override
    public TransactionHistoryRecord value10(Boolean value) {
        setMigrated(value);
        return this;
    }

    @Override
    public TransactionHistoryRecord values(UUID value1, String value2, String value3, String value4, String value5, Float value6, String value7, OffsetDateTime value8, Boolean value9, Boolean value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionHistoryRecord
     */
    public TransactionHistoryRecord() {
        super(TransactionHistory.TRANSACTION_HISTORY);
    }

    /**
     * Create a detached, initialised TransactionHistoryRecord
     */
    public TransactionHistoryRecord(UUID id, String ccNum, String merchantName, String dateTime, String category, Float amount, String transNum, OffsetDateTime unixTime, Boolean isFraud, Boolean migrated) {
        super(TransactionHistory.TRANSACTION_HISTORY);

        setId(id);
        setCcNum(ccNum);
        setMerchantName(merchantName);
        setDateTime(dateTime);
        setCategory(category);
        setAmount(amount);
        setTransNum(transNum);
        setUnixTime(unixTime);
        setIsFraud(isFraud);
        setMigrated(migrated);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TransactionHistoryRecord
     */
    public TransactionHistoryRecord(ru.bogatov.fdrtstransaction.model.database.jooq.tables.pojos.TransactionHistory value) {
        super(TransactionHistory.TRANSACTION_HISTORY);

        if (value != null) {
            setId(value.getId());
            setCcNum(value.getCcNum());
            setMerchantName(value.getMerchantName());
            setDateTime(value.getDateTime());
            setCategory(value.getCategory());
            setAmount(value.getAmount());
            setTransNum(value.getTransNum());
            setUnixTime(value.getUnixTime());
            setIsFraud(value.getIsFraud());
            setMigrated(value.getMigrated());
            resetChangedOnNotNull();
        }
    }
}
