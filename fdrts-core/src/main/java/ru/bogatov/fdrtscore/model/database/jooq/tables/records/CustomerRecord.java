/*
 * This file is generated by jOOQ.
 */
package ru.bogatov.fdrtscore.model.database.jooq.tables.records;


import java.time.LocalDate;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.TableRecordImpl;

import ru.bogatov.fdrtscore.model.database.jooq.tables.Customer;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerRecord extends TableRecordImpl<CustomerRecord> implements Record15<UUID, String, String, String, Boolean, LocalDate, String, String, String, Integer, String, Integer, Float, Float, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.customer.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.customer.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.customer.cc_num</code>.
     */
    public void setCcNum(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.customer.cc_num</code>.
     */
    public String getCcNum() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.customer.first_name</code>.
     */
    public void setFirstName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.customer.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.customer.last_name</code>.
     */
    public void setLastName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.customer.last_name</code>.
     */
    public String getLastName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.customer.gender</code>.
     */
    public void setGender(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.customer.gender</code>.
     */
    public Boolean getGender() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.customer.birthday</code>.
     */
    public void setBirthday(LocalDate value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.customer.birthday</code>.
     */
    public LocalDate getBirthday() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>public.customer.street</code>.
     */
    public void setStreet(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.customer.street</code>.
     */
    public String getStreet() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.customer.city</code>.
     */
    public void setCity(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.customer.city</code>.
     */
    public String getCity() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.customer.state</code>.
     */
    public void setState(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.customer.state</code>.
     */
    public String getState() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.customer.zip</code>.
     */
    public void setZip(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.customer.zip</code>.
     */
    public Integer getZip() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>public.customer.job</code>.
     */
    public void setJob(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.customer.job</code>.
     */
    public String getJob() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.customer.city_pop</code>.
     */
    public void setCityPop(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.customer.city_pop</code>.
     */
    public Integer getCityPop() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>public.customer.lat</code>.
     */
    public void setLat(Float value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.customer.lat</code>.
     */
    public Float getLat() {
        return (Float) get(12);
    }

    /**
     * Setter for <code>public.customer.long</code>.
     */
    public void setLong(Float value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.customer.long</code>.
     */
    public Float getLong() {
        return (Float) get(13);
    }

    /**
     * Setter for <code>public.customer.migrated</code>.
     */
    public void setMigrated(Boolean value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.customer.migrated</code>.
     */
    public Boolean getMigrated() {
        return (Boolean) get(14);
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<UUID, String, String, String, Boolean, LocalDate, String, String, String, Integer, String, Integer, Float, Float, Boolean> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<UUID, String, String, String, Boolean, LocalDate, String, String, String, Integer, String, Integer, Float, Float, Boolean> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Customer.CUSTOMER.ID;
    }

    @Override
    public Field<String> field2() {
        return Customer.CUSTOMER.CC_NUM;
    }

    @Override
    public Field<String> field3() {
        return Customer.CUSTOMER.FIRST_NAME;
    }

    @Override
    public Field<String> field4() {
        return Customer.CUSTOMER.LAST_NAME;
    }

    @Override
    public Field<Boolean> field5() {
        return Customer.CUSTOMER.GENDER;
    }

    @Override
    public Field<LocalDate> field6() {
        return Customer.CUSTOMER.BIRTHDAY;
    }

    @Override
    public Field<String> field7() {
        return Customer.CUSTOMER.STREET;
    }

    @Override
    public Field<String> field8() {
        return Customer.CUSTOMER.CITY;
    }

    @Override
    public Field<String> field9() {
        return Customer.CUSTOMER.STATE;
    }

    @Override
    public Field<Integer> field10() {
        return Customer.CUSTOMER.ZIP;
    }

    @Override
    public Field<String> field11() {
        return Customer.CUSTOMER.JOB;
    }

    @Override
    public Field<Integer> field12() {
        return Customer.CUSTOMER.CITY_POP;
    }

    @Override
    public Field<Float> field13() {
        return Customer.CUSTOMER.LAT;
    }

    @Override
    public Field<Float> field14() {
        return Customer.CUSTOMER.LONG;
    }

    @Override
    public Field<Boolean> field15() {
        return Customer.CUSTOMER.MIGRATED;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCcNum();
    }

    @Override
    public String component3() {
        return getFirstName();
    }

    @Override
    public String component4() {
        return getLastName();
    }

    @Override
    public Boolean component5() {
        return getGender();
    }

    @Override
    public LocalDate component6() {
        return getBirthday();
    }

    @Override
    public String component7() {
        return getStreet();
    }

    @Override
    public String component8() {
        return getCity();
    }

    @Override
    public String component9() {
        return getState();
    }

    @Override
    public Integer component10() {
        return getZip();
    }

    @Override
    public String component11() {
        return getJob();
    }

    @Override
    public Integer component12() {
        return getCityPop();
    }

    @Override
    public Float component13() {
        return getLat();
    }

    @Override
    public Float component14() {
        return getLong();
    }

    @Override
    public Boolean component15() {
        return getMigrated();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCcNum();
    }

    @Override
    public String value3() {
        return getFirstName();
    }

    @Override
    public String value4() {
        return getLastName();
    }

    @Override
    public Boolean value5() {
        return getGender();
    }

    @Override
    public LocalDate value6() {
        return getBirthday();
    }

    @Override
    public String value7() {
        return getStreet();
    }

    @Override
    public String value8() {
        return getCity();
    }

    @Override
    public String value9() {
        return getState();
    }

    @Override
    public Integer value10() {
        return getZip();
    }

    @Override
    public String value11() {
        return getJob();
    }

    @Override
    public Integer value12() {
        return getCityPop();
    }

    @Override
    public Float value13() {
        return getLat();
    }

    @Override
    public Float value14() {
        return getLong();
    }

    @Override
    public Boolean value15() {
        return getMigrated();
    }

    @Override
    public CustomerRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public CustomerRecord value2(String value) {
        setCcNum(value);
        return this;
    }

    @Override
    public CustomerRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public CustomerRecord value4(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public CustomerRecord value5(Boolean value) {
        setGender(value);
        return this;
    }

    @Override
    public CustomerRecord value6(LocalDate value) {
        setBirthday(value);
        return this;
    }

    @Override
    public CustomerRecord value7(String value) {
        setStreet(value);
        return this;
    }

    @Override
    public CustomerRecord value8(String value) {
        setCity(value);
        return this;
    }

    @Override
    public CustomerRecord value9(String value) {
        setState(value);
        return this;
    }

    @Override
    public CustomerRecord value10(Integer value) {
        setZip(value);
        return this;
    }

    @Override
    public CustomerRecord value11(String value) {
        setJob(value);
        return this;
    }

    @Override
    public CustomerRecord value12(Integer value) {
        setCityPop(value);
        return this;
    }

    @Override
    public CustomerRecord value13(Float value) {
        setLat(value);
        return this;
    }

    @Override
    public CustomerRecord value14(Float value) {
        setLong(value);
        return this;
    }

    @Override
    public CustomerRecord value15(Boolean value) {
        setMigrated(value);
        return this;
    }

    @Override
    public CustomerRecord values(UUID value1, String value2, String value3, String value4, Boolean value5, LocalDate value6, String value7, String value8, String value9, Integer value10, String value11, Integer value12, Float value13, Float value14, Boolean value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerRecord
     */
    public CustomerRecord() {
        super(Customer.CUSTOMER);
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    public CustomerRecord(UUID id, String ccNum, String firstName, String lastName, Boolean gender, LocalDate birthday, String street, String city, String state, Integer zip, String job, Integer cityPop, Float lat, Float long_, Boolean migrated) {
        super(Customer.CUSTOMER);

        setId(id);
        setCcNum(ccNum);
        setFirstName(firstName);
        setLastName(lastName);
        setGender(gender);
        setBirthday(birthday);
        setStreet(street);
        setCity(city);
        setState(state);
        setZip(zip);
        setJob(job);
        setCityPop(cityPop);
        setLat(lat);
        setLong(long_);
        setMigrated(migrated);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    public CustomerRecord(ru.bogatov.fdrtscore.model.database.jooq.tables.pojos.Customer value) {
        super(Customer.CUSTOMER);

        if (value != null) {
            setId(value.getId());
            setCcNum(value.getCcNum());
            setFirstName(value.getFirstName());
            setLastName(value.getLastName());
            setGender(value.getGender());
            setBirthday(value.getBirthday());
            setStreet(value.getStreet());
            setCity(value.getCity());
            setState(value.getState());
            setZip(value.getZip());
            setJob(value.getJob());
            setCityPop(value.getCityPop());
            setLat(value.getLat());
            setLong(value.getLong());
            setMigrated(value.getMigrated());
            resetChangedOnNotNull();
        }
    }
}
